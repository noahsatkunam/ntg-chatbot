{
  "name": "ntg-chatbot-platform",
  "private": true,
  "version": "1.0.0",
  "description": "Multi-tenant chatbot platform - Full Stack Application",
  "type": "module",
  "workspaces": [
    "frontend",
    "backend"
  ],
  "scripts": {
    "dev:start": "node scripts/dev-start.js",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:n8n": "n8n start --env-file=.env.n8n",
    "dev:full": "node scripts/dev-full.js",
    "n8n:start": "n8n start --env-file=.env.n8n",
    "n8n:setup": "mkdir -p .n8n && n8n import:workflow --input=.n8n/workflows --env-file=.env.n8n",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "start": "npm run start:backend",
    "start:backend": "cd backend && npm run start",
    "start:frontend": "cd frontend && npm run start",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm run test",
    "test:frontend": "cd frontend && npm run test",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "clean": "npm run clean:backend && npm run clean:frontend",
    "clean:backend": "cd backend && npm run clean",
    "clean:frontend": "cd frontend && npm run clean",
    "setup": "npm install && cd backend && npm install && cd ../frontend && npm install",
    "health": "node scripts/health-check.js",
    "env:setup": "cp .env.example .env && echo 'Environment file created. Please update .env with your actual values.'",
    "dev:setup": "node scripts/dev-setup.js",
    "env:validate": "node scripts/validate-env.js",
    "db:migrate": "cd backend && npm run prisma:migrate:dev",
    "db:seed": "cd backend && npm run prisma:seed",
    "db:reset": "cd backend && npm run prisma:reset",
    "db:studio": "cd backend && npm run prisma:studio",
    "docker:dev": "docker-compose up --build",
    "docker:prod": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml up --build",
    "docker:logs": "docker-compose logs -f",
    "docker:stop": "docker-compose down",
    "docker:clean": "docker-compose down -v --remove-orphans && docker system prune -f",
    "health:check": "curl -f http://localhost:3001/api/health || echo 'Backend health check failed'",
    "deploy:prod": "chmod +x scripts/deploy-production.sh && ./scripts/deploy-production.sh"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "rimraf": "^5.0.5"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "lovable-tagger": "^1.1.9",
    "web-vitals": "^5.1.0"
  }
}
